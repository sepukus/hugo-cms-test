// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

// Truncate text element with ellipsis
@mixin truncate() {
  display: table;
  table-layout: fixed;
  width: 100%;
  white-space: nowrap;

  > * {
    display: table-cell;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// global spacing mixing
@mixin componentSpacingCompile($small: false) {
  @if $small {
    padding-top: $global-padding-minimal;
    padding-bottom: $global-padding-minimal / 2;

    @media (max-width: $breakpoint-small) {
      padding-top: $global-padding-minimal-mobile;
      padding-bottom: $global-padding-minimal-mobile / 2;
    }
  } @else {
    padding-top: $global-padding;
    padding-bottom: $global-padding / 2;

    @media (max-width: $breakpoint-small) {
      padding-top: $global-padding-mobile;
      padding-bottom: $global-padding-mobile / 2;
    }
  }
}

